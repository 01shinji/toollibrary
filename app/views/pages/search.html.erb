<div class=" row" id="main">

  <div id="left" class="col-md-6 col-sm-6 col-xs-12">

   <!-- Google Map -->

   <%= render "spot_name" %>

   <div id="map">
   </div>

  </div>



  <div id="right" class="col-md-6 col-sm-6 col-xs-12">
    <!-- 検索パネル -->

    <% if @arrListings.count == 0 %>

    <div class="registration-alert b-light-red">
     <p>
       まだこの地域に出品はありません&nbsp;
       <%= link_to "出品する", new_listing_path , class: "blue b-white" %>
     </p>
    </div>



    <% else %>

    <div class="registration-alert b-light-green">
       <p>
         この地域には<%= @arrListings.count %>点の出品があります&nbsp;

       </p>
    </div>


    <!-- 出品中アイテム -->
    <div class="row listings-list" id="">
      <%= render partial: "listings/listings_list", locals: {listings: @arrListings} %>
    </div>
    <div>
      <%= search_form_for @search, url: search_path do |f| %>

      <%= hidden_field_tag :search, session[:address], :id => "search-address" %>

        <div class="search-detail">
          <div id="detail-header" class="text-center ">

            <p>
              詳細な検索
              <span class="chevron">
                <i class='fa fa-chevron-down'></i>
              </span>
            </p>

          </div>

          <div class="detail-list">
           <div class="row search-panel-li">
             <p>価格帯(円)</p>

             <div class="col-md-6 col-sm-6 col-xs-6 box">
               <%= f.text_field :price_day_gteq, placeholder: "Min", class: "form-control ", value: session[:price_day_gteq] %>
             </div>

             <div class="col-md-6 col-sm-6 col-xs-6 box">
              <%= f.text_field :price_day_lteq, placeholder: "Max", class: "form-control ", value: session[:price_day_lteq] %>
             </div>
           </div>

           <div class="row search-panel-li">
             <p>借りたい日付</p>

             <div class="col-md-6 col-sm-6 col-xs-6 box">
              <%= text_field_tag :start_date, params[:start_date], readonly: true, placeholder: "開始日", class: "form-control", value: session[:start_date] %>
             </div>

             <div class="col-md-6 col-sm-6 col-xs-6 box">
              <%= text_field_tag :end_date, params[:end_date], readonly: true, placeholder: "終了日", class: "form-control", value: session[:end_date] %>
             </div>
           </div>

           <div class="text-center">
             <%= f.submit "絞り込む", class: "btn-sm white b-red" %>
           </div>

          </div>
        </div>

      <% end %>
    </div>


    <% end %>
  </div>

  <%= render "search_spot" %>

</div>



<script>
  $('#start_date').datepicker({
    dateFormat: 'yy/mm/dd',
    minDate: 0,
    maxDate: '3m',
    onSelect: function(selected) {
      $('#end_date').datepicker("option", "minDate", selected);
      $('#end_date').attr("disabled", false);
    }
  });

  $('#end_date').datepicker({
    dateFormat: 'yy/mm/dd',
    minDate: 0,
    maxDate: '3m',
    onSelect: function(selected) {
      $('#start_date').datepicker("option", "maxDate", selected);
    }
  });


</script>



<script>
// FAQのアコーディオン
$("#detail-header").click(function(){
    var $answer = $(".search-detail").find(".detail-list");
    if ($answer.hasClass("open")) {
      $answer.removeClass("open");
      $answer.slideUp();
      $(this).find(".chevron").html("<i class='fa fa-chevron-down'></i>");
    }else{
      $answer.addClass("open");
      $answer.slideDown();
      $(this).find(".chevron").html("<i class='fa fa-chevron-up'></i>");
    }
  });
</script>

<script>
function initMap() {
  map = new google.maps.Map(document.getElementById('map'), {
    center: {lat: <%= @latitude %>, lng: <%= @longitude %>},
    zoom: 14,
    // デフォルトのコントロールセット非表示
    disableDefaultUI: true,
    // デフォルトの情報ウィンドウ非表示
    clickableIcons: false
  });

  var rectangle = new google.maps.Rectangle({
         strokeColor: '#04b4e4 ',
         strokeOpacity: 0.8,
         strokeWeight: 2,
         fillColor: '#04b4e4 ',
         fillOpacity: 0.35,
         map: map,
         bounds: {
           north: <%= @latitude %>  ,
           south: <%= @latitude %> - 0.005,
           east: <%= @longitude %> + 0.005,
           west: <%= @longitude %> - 0.005
         }
       });


  var input = /** @type {!HTMLInputElement} */(
      document.getElementById('pac-input'));

  var types = document.getElementById('type-selector');
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

  var autocomplete = new google.maps.places.Autocomplete(input);
  autocomplete.bindTo('bounds', map);

  // マーカーとインフォウィンドウの配列を用意
  markers = [];
  infowindows = [];

  <% @arrListings.each do |listing| %>
    //markerはこの関数の中で同じ変数
    var marker = new google.maps.Marker({
      position: new google.maps.LatLng(<%= listing.latitude %>, <%= listing.longitude %>),

      icon:
      <% if listing.category2 == "コーチング" %>
        {url: 'assets/stand-man.png',scaledSize: new google.maps.Size(35, 35)}
      <% elsif listing.category2 == "ボード置き場" %>
        {url: 'assets/warehouse.png',scaledSize: new google.maps.Size(35, 35)}
      <% elsif listing.category2 == "写真撮影" %>
        {url: 'assets/camera.png',scaledSize: new google.maps.Size(35, 35)}
      <% else %>
        {url: 'assets/surfboard.png',scaledSize: new google.maps.Size(40, 40)}
      <% end %>,

      map: map
    });

    // マーカー配列にマーカを保存
    markers.push(marker);

    // マーカーがクリックされた時の処理
    marker.addListener('click', function() {

      <% if !listing.photos.blank? %>
       var content = "<div>" +  "<img src="+"<%= listing.photos[0].image.url(:thumb) %>" + " " + "style='width: 60%;height: 60%;'" +"alt='139'>" + '<br>' + '<a href="/listings/' + <%= listing.id %> +'">' + "<b><%= listing.listing_title %></b>" + "</a>" + '<br>' + "<span>" + "1日" + "</span>&nbsp;<span class='inforwindow-price'>" + "<%= listing.price_day %>" + "</span>円" + '<br>' + "<% if (user_signed_in?) %>"  + "<img src="+"<%= listing.user.image.url(:thumb) %>" + " " + "style='width: 20%;height: 20%;'" + "class='img-circle'" +"alt='139'>" + "<%= listing.user.fullname %>" + "<% else %>" + "<img src="+"/assets/avatar-default" + " " + "style='width: 20%;height: 20%;'" + "class='img-circle avatar-medium'" +"alt='139'>" + "<%= listing.user.nickname %>" + "<% end %>" + "</div>";
      <% end %>



     // infowindowを作成
     var infowindow = new google.maps.InfoWindow({
       content: content,
       maxWidth: 150
     });

     infowindow.open(map, this);
     infowindows.push(infowindow);

    });

  <% end %>

  autocomplete.addListener('place_changed', function() {

    // すべてのinfowindowを消す
    infowindows.forEach(function(infowindow){
      infowindow.close();
    });
    infowindows = [];


    // すべてのmarkerを消す
    markers.forEach(function(marker) {
        marker.setVisible(false);
    });
    markers = [];


    var place = autocomplete.getPlace();
    if (!place.geometry) {
      window.alert("No details available for input: '" + place.name + "'");
      return;
    }

    // If the place has a geometry, then present it on a map.
    if (place.geometry.viewport) {
      map.fitBounds(place.geometry.viewport);
      map.setZoom(12);
    } else {
      map.setCenter(place.geometry.location);
      map.setZoom(12);
    }

    // 入力欄の場所の緯度経度情報を取得
    var lat = place.geometry.location.lat();
    var lng = place.geometry.location.lng();

    // 緯度経度情報をまとめる
    var geolocation = [lat,lng];

    // 場所の住所
    var location = place.formatted_address;

    // autocompleteの入力欄が変更されたらurlも変更して履歴に残す
    url = "/search?utf8=✓&search="+place.formatted_address;

    window.history.pushState(null,null,url);

    $.ajax({
      url: '/ajaxsearch',
      // this data is data for sending to url
      data: {'geolocation': geolocation , 'location':  location}
    });
  });

  //google map がドラッグされた時の処理
  google.maps.event.addListener(map, 'dragend', function() {
    // すべてのinfowindowを消す
    infowindows.forEach(function(infowindow) {
      infowindow.close();
    });
    infowindows = [];

    // すべてのmarkerを消す
    markers.forEach(function(marker) {
      marker.setVisible(false);
    });
    markers = [];

    var pos = map.getCenter();
    var lat = pos.lat();
    var lng = pos.lng();

    var geolocation = [lat,lng];

    $.ajax({
      url: '/ajaxsearch',
      // this data is data for sending to url
      data: {'geolocation': geolocation}
    });

  });


}
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA7ZRYgtCagsAWTqGbqxkpW09Y1i_ZYixI&libraries=places&callback=initMap" async defer></script>
